version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: scoreteam-postgres-dev
    environment:
      POSTGRES_DB: scoreteam
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./server/src/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - scoreteam-network-dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d scoreteam"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Node.js API Server (Development)
  api:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    container_name: scoreteam-api-dev
    environment:
      NODE_ENV: development
      PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: scoreteam
      DB_USER: postgres
      DB_PASSWORD: postgres123
      JWT_SECRET: dev_jwt_secret_key
      JWT_EXPIRES_IN: 24h
      CORS_ORIGIN: http://localhost:5173
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 1000
    ports:
      - "3001:3001"
    volumes:
      - ./server:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - scoreteam-network-dev
    restart: unless-stopped
    command: >
      sh -c "
        echo 'Waiting for database to be ready...' &&
        sleep 10 &&
        echo 'Running migrations...' &&
        npm run migrate &&
        echo 'Starting development server...' &&
        npm run dev
      "

volumes:
  postgres_data_dev:
    driver: local

networks:
  scoreteam-network-dev:
    driver: bridge
